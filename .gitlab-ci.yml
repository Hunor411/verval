stages:
  - build
  - test

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - dotnet restore
    - dotnet build --no-restore --configuration Release
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - ~/.nuget/packages/

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:8.0
  before_script:
    - apt-get update && apt-get install -y wget gnupg unzip
    - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /usr/share/keyrings/google-chrome.gpg
    - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    - apt-get update && apt-get install -y google-chrome-stable
    - wget https://chromedriver.storage.googleapis.com/122.0.6261.69/chromedriver_linux64.zip
    - unzip chromedriver_linux64.zip
    - mv chromedriver /usr/local/bin/
    - chmod +x /usr/local/bin/chromedriver
  script:
    - dotnet test --collect:"XPlat Code Coverage" --logger:"console;verbosity=detailed"
    - dotnet tool install -g dotnet-reportgenerator-globaltool
    - export PATH="$PATH:/root/.dotnet/tools"
    - reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:"Html"
  artifacts:
    when: always
    paths:
      - coverage-report/
    expire_in: 1 week
