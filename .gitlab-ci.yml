stages:
  - build
  - test
  - build_sonar

variables:
  DOTNET_TOOLS: "$HOME/.dotnet/tools"
  PATH: "$DOTNET_TOOLS:$PATH"

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - dotnet restore
    - dotnet build --no-restore --configuration Release
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - ~/.nuget/packages/

test:
  stage: test
  needs:
    - build
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - dotnet add DatesAndStuff.Tests package coverlet.collector
    - dotnet test DatesAndStuff.Tests/DatesAndStuff.Tests.csproj \
      /p:CollectCoverage=true \
      /p:CoverletOutputFormat=opencover \
      /p:CoverletOutput=TestResults/coverage.xml
  artifacts:
    when: always
    paths:
      - DatesAndStuff.Tests/TestResults/coverage.xml
    expire_in: 1 week

build_sonar:
  stage: build_sonar
  image: mcr.microsoft.com/dotnet/sdk:8.0
  tags:
    - localhost_verval
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
  script:
    - dotnet tool install --global dotnet-sonarscanner
    - export PATH="$PATH:$HOME/.dotnet/tools"
    - dotnet sonarscanner begin \
      /k:"deakHuni_verval_e0027f5c-2c94-4091-a0f7-55607086bedb" \
      /d:sonar.token="$SONAR_TOKEN" \
      /d:sonar.host.url="$SONAR_HOST_URL" \
      /d:sonar.cs.opencover.reportsPaths="**/TestResults/coverage.xml"
    - dotnet build
    - dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
  dependencies:
    - test
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
